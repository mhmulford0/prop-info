/* eslint-disable @typescript-eslint/no-unsafe-argument */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/* eslint-disable @typescript-eslint/no-explicit-any */
/* eslint-disable @typescript-eslint/consistent-type-imports */
// Generated by @wagmi/cli@0.1.5 on 2/8/2023 at 6:34:56â€¯PM
import {
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from 'wagmi'
import { WriteContractMode, PrepareWriteContractResult } from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NounsDAO
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const nounsDaoABI = [
  { type: 'error', inputs: [], name: 'AdminOnly' },
  { type: 'error', inputs: [], name: 'CantCancelExecutedProposal' },
  { type: 'error', inputs: [], name: 'CantVetoExecutedProposal' },
  { type: 'error', inputs: [], name: 'InvalidMaxQuorumVotesBPS' },
  { type: 'error', inputs: [], name: 'InvalidMinQuorumVotesBPS' },
  { type: 'error', inputs: [], name: 'MinQuorumBPSGreaterThanMaxQuorumBPS' },
  { type: 'error', inputs: [], name: 'PendingVetoerOnly' },
  { type: 'error', inputs: [], name: 'UnsafeUint16Cast' },
  { type: 'error', inputs: [], name: 'VetoerBurned' },
  { type: 'error', inputs: [], name: 'VetoerOnly' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldMaxQuorumVotesBPS',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
      {
        name: 'newMaxQuorumVotesBPS',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
    ],
    name: 'MaxQuorumVotesBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldMinQuorumVotesBPS',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
      {
        name: 'newMinQuorumVotesBPS',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
    ],
    name: 'MinQuorumVotesBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'NewAdmin',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldImplementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newImplementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'NewImplementation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldPendingAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newPendingAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'NewPendingAdmin',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldPendingVetoer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newPendingVetoer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'NewPendingVetoer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldVetoer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newVetoer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'NewVetoer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalCanceled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'proposer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'targets',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
      {
        name: 'values',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false,
      },
      {
        name: 'signatures',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false,
      },
      {
        name: 'calldatas',
        internalType: 'bytes[]',
        type: 'bytes[]',
        indexed: false,
      },
      {
        name: 'startBlock',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'endBlock',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'description',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'ProposalCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'proposer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'targets',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
      {
        name: 'values',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false,
      },
      {
        name: 'signatures',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false,
      },
      {
        name: 'calldatas',
        internalType: 'bytes[]',
        type: 'bytes[]',
        indexed: false,
      },
      {
        name: 'startBlock',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'endBlock',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'proposalThreshold',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'quorumVotes',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'description',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'ProposalCreatedWithRequirements',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalExecuted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'eta', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalQueued',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldProposalThresholdBPS',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newProposalThresholdBPS',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ProposalThresholdBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalVetoed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldQuorumCoefficient',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'newQuorumCoefficient',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
    ],
    name: 'QuorumCoefficientSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldQuorumVotesBPS',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newQuorumVotesBPS',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'QuorumVotesBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'voter',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'refundAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'refundSent',
        internalType: 'bool',
        type: 'bool',
        indexed: false,
      },
    ],
    name: 'RefundableVote',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'voter',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'proposalId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'support', internalType: 'uint8', type: 'uint8', indexed: false },
      {
        name: 'votes',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'reason',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'VoteCast',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldVotingDelay',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newVotingDelay',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'VotingDelaySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldVotingPeriod',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newVotingPeriod',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'VotingPeriodSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'sent', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'Withdraw',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'BALLOT_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DOMAIN_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_PROPOSAL_THRESHOLD_BPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_QUORUM_VOTES_BPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_QUORUM_VOTES_BPS_UPPER_BOUND',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_REFUND_BASE_FEE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_REFUND_GAS_USED',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_REFUND_PRIORITY_FEE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_VOTING_DELAY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_VOTING_PERIOD',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_PROPOSAL_THRESHOLD_BPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_QUORUM_VOTES_BPS_LOWER_BOUND',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_QUORUM_VOTES_BPS_UPPER_BOUND',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_VOTING_DELAY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_VOTING_PERIOD',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'REFUND_BASE_GAS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: '_acceptAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: '_acceptVetoer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: '_burnVetoPower',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newMinQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
      { name: 'newMaxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
      { name: 'newQuorumCoefficient', internalType: 'uint32', type: 'uint32' },
    ],
    name: '_setDynamicQuorumParams',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newMaxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
    ],
    name: '_setMaxQuorumVotesBPS',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newMinQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
    ],
    name: '_setMinQuorumVotesBPS',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newPendingAdmin', internalType: 'address', type: 'address' },
    ],
    name: '_setPendingAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newPendingVetoer', internalType: 'address', type: 'address' },
    ],
    name: '_setPendingVetoer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newProposalThresholdBPS',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: '_setProposalThresholdBPS',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newQuorumCoefficient', internalType: 'uint32', type: 'uint32' },
    ],
    name: '_setQuorumCoefficient',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newVotingDelay', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_setVotingDelay',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newVotingPeriod', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_setVotingPeriod',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: '_withdraw',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'admin',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'cancel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'castRefundableVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'castRefundableVoteWithReason',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'castVoteBySig',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'castVoteWithReason',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'againstVotes', internalType: 'uint256', type: 'uint256' },
      { name: 'totalSupply', internalType: 'uint256', type: 'uint256' },
      {
        name: 'params',
        internalType: 'struct NounsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
    name: 'dynamicQuorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'execute',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'getActions',
    outputs: [
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'signatures', internalType: 'string[]', type: 'string[]' },
      { name: 'calldatas', internalType: 'bytes[]', type: 'bytes[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'blockNumber_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDynamicQuorumParamsAt',
    outputs: [
      {
        name: '',
        internalType: 'struct NounsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'voter', internalType: 'address', type: 'address' },
    ],
    name: 'getReceipt',
    outputs: [
      {
        name: '',
        internalType: 'struct NounsDAOStorageV1Adjusted.Receipt',
        type: 'tuple',
        components: [
          { name: 'hasVoted', internalType: 'bool', type: 'bool' },
          { name: 'support', internalType: 'uint8', type: 'uint8' },
          { name: 'votes', internalType: 'uint96', type: 'uint96' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'implementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'timelock_', internalType: 'address', type: 'address' },
      { name: 'nouns_', internalType: 'address', type: 'address' },
      { name: 'vetoer_', internalType: 'address', type: 'address' },
      { name: 'votingPeriod_', internalType: 'uint256', type: 'uint256' },
      { name: 'votingDelay_', internalType: 'uint256', type: 'uint256' },
      {
        name: 'proposalThresholdBPS_',
        internalType: 'uint256',
        type: 'uint256',
      },
      {
        name: 'dynamicQuorumParams_',
        internalType: 'struct NounsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'latestProposalIds',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxQuorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nouns',
    outputs: [
      { name: '', internalType: 'contract NounsTokenLike', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pendingAdmin',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pendingVetoer',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalMaxOperations',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalThreshold',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalThresholdBPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'proposals',
    outputs: [
      {
        name: '',
        internalType: 'struct NounsDAOStorageV2.ProposalCondensed',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'proposer', internalType: 'address', type: 'address' },
          {
            name: 'proposalThreshold',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'quorumVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'eta', internalType: 'uint256', type: 'uint256' },
          { name: 'startBlock', internalType: 'uint256', type: 'uint256' },
          { name: 'endBlock', internalType: 'uint256', type: 'uint256' },
          { name: 'forVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'againstVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'abstainVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'canceled', internalType: 'bool', type: 'bool' },
          { name: 'vetoed', internalType: 'bool', type: 'bool' },
          { name: 'executed', internalType: 'bool', type: 'bool' },
          { name: 'totalSupply', internalType: 'uint256', type: 'uint256' },
          { name: 'creationBlock', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'signatures', internalType: 'string[]', type: 'string[]' },
      { name: 'calldatas', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'description', internalType: 'string', type: 'string' },
    ],
    name: 'propose',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'queue',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'quorumParamsCheckpoints',
    outputs: [
      { name: 'fromBlock', internalType: 'uint32', type: 'uint32' },
      {
        name: 'params',
        internalType: 'struct NounsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'quorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'quorumVotesBPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'state',
    outputs: [
      {
        name: '',
        internalType: 'enum NounsDAOStorageV1Adjusted.ProposalState',
        type: 'uint8',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'timelock',
    outputs: [
      { name: '', internalType: 'contract INounsDAOExecutor', type: 'address' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'veto',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'vetoer',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'votingDelay',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'votingPeriod',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const

export const nounsDaoAddress =
  '0x6f3E6272A167e8AcCb32072d08E0957F9c79223d' as const

export const nounsDaoConfig = {
  address: nounsDaoAddress,
  abi: nounsDaoABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link nounsDaoABI}__.
 */
export function useNounsDao(
  config: Omit<UseContractConfig, 'abi' | 'address'> = {} as any,
) {
  return useContract({ abi: nounsDaoABI, address: nounsDaoAddress, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__.
 */
export function useNounsDaoRead<TFunctionName extends string>(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, TFunctionName>,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, TFunctionName>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"BALLOT_TYPEHASH"`.
 */
export function useNounsDaoBallotTypehash(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'BALLOT_TYPEHASH'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'BALLOT_TYPEHASH',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'BALLOT_TYPEHASH'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"DOMAIN_TYPEHASH"`.
 */
export function useNounsDaoDomainTypehash(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'DOMAIN_TYPEHASH'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'DOMAIN_TYPEHASH',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'DOMAIN_TYPEHASH'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MAX_PROPOSAL_THRESHOLD_BPS"`.
 */
export function useNounsDaoMaxProposalThresholdBps(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'MAX_PROPOSAL_THRESHOLD_BPS'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MAX_PROPOSAL_THRESHOLD_BPS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'MAX_PROPOSAL_THRESHOLD_BPS'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MAX_QUORUM_VOTES_BPS"`.
 */
export function useNounsDaoMaxQuorumVotesBps(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'MAX_QUORUM_VOTES_BPS'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MAX_QUORUM_VOTES_BPS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'MAX_QUORUM_VOTES_BPS'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MAX_QUORUM_VOTES_BPS_UPPER_BOUND"`.
 */
export function useNounsDaoMaxQuorumVotesBpsUpperBound(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoABI,
      'MAX_QUORUM_VOTES_BPS_UPPER_BOUND'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MAX_QUORUM_VOTES_BPS_UPPER_BOUND',
    ...config,
  } as UseContractReadConfig<
    typeof nounsDaoABI,
    'MAX_QUORUM_VOTES_BPS_UPPER_BOUND'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MAX_REFUND_BASE_FEE"`.
 */
export function useNounsDaoMaxRefundBaseFee(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'MAX_REFUND_BASE_FEE'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MAX_REFUND_BASE_FEE',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'MAX_REFUND_BASE_FEE'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MAX_REFUND_GAS_USED"`.
 */
export function useNounsDaoMaxRefundGasUsed(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'MAX_REFUND_GAS_USED'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MAX_REFUND_GAS_USED',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'MAX_REFUND_GAS_USED'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MAX_REFUND_PRIORITY_FEE"`.
 */
export function useNounsDaoMaxRefundPriorityFee(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'MAX_REFUND_PRIORITY_FEE'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MAX_REFUND_PRIORITY_FEE',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'MAX_REFUND_PRIORITY_FEE'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MAX_VOTING_DELAY"`.
 */
export function useNounsDaoMaxVotingDelay(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'MAX_VOTING_DELAY'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MAX_VOTING_DELAY',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'MAX_VOTING_DELAY'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MAX_VOTING_PERIOD"`.
 */
export function useNounsDaoMaxVotingPeriod(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'MAX_VOTING_PERIOD'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MAX_VOTING_PERIOD',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'MAX_VOTING_PERIOD'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MIN_PROPOSAL_THRESHOLD_BPS"`.
 */
export function useNounsDaoMinProposalThresholdBps(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'MIN_PROPOSAL_THRESHOLD_BPS'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MIN_PROPOSAL_THRESHOLD_BPS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'MIN_PROPOSAL_THRESHOLD_BPS'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MIN_QUORUM_VOTES_BPS_LOWER_BOUND"`.
 */
export function useNounsDaoMinQuorumVotesBpsLowerBound(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoABI,
      'MIN_QUORUM_VOTES_BPS_LOWER_BOUND'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MIN_QUORUM_VOTES_BPS_LOWER_BOUND',
    ...config,
  } as UseContractReadConfig<
    typeof nounsDaoABI,
    'MIN_QUORUM_VOTES_BPS_LOWER_BOUND'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MIN_QUORUM_VOTES_BPS_UPPER_BOUND"`.
 */
export function useNounsDaoMinQuorumVotesBpsUpperBound(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoABI,
      'MIN_QUORUM_VOTES_BPS_UPPER_BOUND'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MIN_QUORUM_VOTES_BPS_UPPER_BOUND',
    ...config,
  } as UseContractReadConfig<
    typeof nounsDaoABI,
    'MIN_QUORUM_VOTES_BPS_UPPER_BOUND'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MIN_VOTING_DELAY"`.
 */
export function useNounsDaoMinVotingDelay(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'MIN_VOTING_DELAY'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MIN_VOTING_DELAY',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'MIN_VOTING_DELAY'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"MIN_VOTING_PERIOD"`.
 */
export function useNounsDaoMinVotingPeriod(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'MIN_VOTING_PERIOD'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'MIN_VOTING_PERIOD',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'MIN_VOTING_PERIOD'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"REFUND_BASE_GAS"`.
 */
export function useNounsDaoRefundBaseGas(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'REFUND_BASE_GAS'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'REFUND_BASE_GAS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'REFUND_BASE_GAS'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"admin"`.
 */
export function useNounsDaoAdmin(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'admin'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'admin',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'admin'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"dynamicQuorumVotes"`.
 */
export function useNounsDaoDynamicQuorumVotes(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'dynamicQuorumVotes'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'dynamicQuorumVotes',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'dynamicQuorumVotes'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"getActions"`.
 */
export function useNounsDaoGetActions(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'getActions'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'getActions',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'getActions'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"getDynamicQuorumParamsAt"`.
 */
export function useNounsDaoGetDynamicQuorumParamsAt(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'getDynamicQuorumParamsAt'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'getDynamicQuorumParamsAt',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'getDynamicQuorumParamsAt'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"getReceipt"`.
 */
export function useNounsDaoGetReceipt(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'getReceipt'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'getReceipt',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'getReceipt'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"implementation"`.
 */
export function useNounsDaoImplementation(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'implementation'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'implementation',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'implementation'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"latestProposalIds"`.
 */
export function useNounsDaoLatestProposalIds(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'latestProposalIds'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'latestProposalIds',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'latestProposalIds'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"maxQuorumVotes"`.
 */
export function useNounsDaoMaxQuorumVotes(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'maxQuorumVotes'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'maxQuorumVotes',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'maxQuorumVotes'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"minQuorumVotes"`.
 */
export function useNounsDaoMinQuorumVotes(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'minQuorumVotes'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'minQuorumVotes',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'minQuorumVotes'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"name"`.
 */
export function useNounsDaoName(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'name'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'name'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"nouns"`.
 */
export function useNounsDaoNouns(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'nouns'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'nouns',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'nouns'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"pendingAdmin"`.
 */
export function useNounsDaoPendingAdmin(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'pendingAdmin'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'pendingAdmin',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'pendingAdmin'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"pendingVetoer"`.
 */
export function useNounsDaoPendingVetoer(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'pendingVetoer'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'pendingVetoer',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'pendingVetoer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"proposalCount"`.
 */
export function useNounsDaoProposalCount(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'proposalCount'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'proposalCount',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'proposalCount'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"proposalMaxOperations"`.
 */
export function useNounsDaoProposalMaxOperations(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'proposalMaxOperations'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'proposalMaxOperations',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'proposalMaxOperations'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"proposalThreshold"`.
 */
export function useNounsDaoProposalThreshold(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'proposalThreshold'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'proposalThreshold',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'proposalThreshold'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"proposalThresholdBPS"`.
 */
export function useNounsDaoProposalThresholdBps(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'proposalThresholdBPS'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'proposalThresholdBPS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'proposalThresholdBPS'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"proposals"`.
 */
export function useNounsDaoProposals(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'proposals'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'proposals',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'proposals'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"quorumParamsCheckpoints"`.
 */
export function useNounsDaoQuorumParamsCheckpoints(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'quorumParamsCheckpoints'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'quorumParamsCheckpoints',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'quorumParamsCheckpoints'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"quorumVotes"`.
 */
export function useNounsDaoQuorumVotes(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'quorumVotes'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'quorumVotes',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'quorumVotes'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"quorumVotesBPS"`.
 */
export function useNounsDaoQuorumVotesBps(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'quorumVotesBPS'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'quorumVotesBPS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'quorumVotesBPS'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"state"`.
 */
export function useNounsDaoState(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'state'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'state',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'state'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"timelock"`.
 */
export function useNounsDaoTimelock(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'timelock'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'timelock',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'timelock'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"vetoer"`.
 */
export function useNounsDaoVetoer(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'vetoer'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'vetoer',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'vetoer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"votingDelay"`.
 */
export function useNounsDaoVotingDelay(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'votingDelay'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'votingDelay',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'votingDelay'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"votingPeriod"`.
 */
export function useNounsDaoVotingPeriod(
  config: Omit<
    UseContractReadConfig<typeof nounsDaoABI, 'votingPeriod'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'votingPeriod',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoABI, 'votingPeriod'>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__.
 */
export function useNounsDaoWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, string>['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, TFunctionName> & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, TFunctionName>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_acceptAdmin"`.
 */
export function useNounsDaoAcceptAdmin<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, '_acceptAdmin'>['abi'],
        '_acceptAdmin'
      > & { functionName?: '_acceptAdmin' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, '_acceptAdmin'> & {
        abi?: never
        functionName?: '_acceptAdmin'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_acceptAdmin'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_acceptAdmin',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_acceptVetoer"`.
 */
export function useNounsDaoAcceptVetoer<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, '_acceptVetoer'>['abi'],
        '_acceptVetoer'
      > & { functionName?: '_acceptVetoer' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, '_acceptVetoer'> & {
        abi?: never
        functionName?: '_acceptVetoer'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_acceptVetoer'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_acceptVetoer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_burnVetoPower"`.
 */
export function useNounsDaoBurnVetoPower<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, '_burnVetoPower'>['abi'],
        '_burnVetoPower'
      > & { functionName?: '_burnVetoPower' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, '_burnVetoPower'> & {
        abi?: never
        functionName?: '_burnVetoPower'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_burnVetoPower'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_burnVetoPower',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setDynamicQuorumParams"`.
 */
export function useNounsDaoSetDynamicQuorumParams<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          '_setDynamicQuorumParams'
        >['abi'],
        '_setDynamicQuorumParams'
      > & { functionName?: '_setDynamicQuorumParams' }
    : UseContractWriteConfig<
        TMode,
        typeof nounsDaoABI,
        '_setDynamicQuorumParams'
      > & {
        abi?: never
        functionName?: '_setDynamicQuorumParams'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_setDynamicQuorumParams'>(
    {
      abi: nounsDaoABI,
      address: nounsDaoAddress,
      functionName: '_setDynamicQuorumParams',
      ...config,
    } as any,
  )
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setMaxQuorumVotesBPS"`.
 */
export function useNounsDaoSetMaxQuorumVotesBps<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          '_setMaxQuorumVotesBPS'
        >['abi'],
        '_setMaxQuorumVotesBPS'
      > & { functionName?: '_setMaxQuorumVotesBPS' }
    : UseContractWriteConfig<
        TMode,
        typeof nounsDaoABI,
        '_setMaxQuorumVotesBPS'
      > & {
        abi?: never
        functionName?: '_setMaxQuorumVotesBPS'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_setMaxQuorumVotesBPS'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setMaxQuorumVotesBPS',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setMinQuorumVotesBPS"`.
 */
export function useNounsDaoSetMinQuorumVotesBps<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          '_setMinQuorumVotesBPS'
        >['abi'],
        '_setMinQuorumVotesBPS'
      > & { functionName?: '_setMinQuorumVotesBPS' }
    : UseContractWriteConfig<
        TMode,
        typeof nounsDaoABI,
        '_setMinQuorumVotesBPS'
      > & {
        abi?: never
        functionName?: '_setMinQuorumVotesBPS'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_setMinQuorumVotesBPS'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setMinQuorumVotesBPS',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setPendingAdmin"`.
 */
export function useNounsDaoSetPendingAdmin<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          '_setPendingAdmin'
        >['abi'],
        '_setPendingAdmin'
      > & { functionName?: '_setPendingAdmin' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, '_setPendingAdmin'> & {
        abi?: never
        functionName?: '_setPendingAdmin'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_setPendingAdmin'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setPendingAdmin',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setPendingVetoer"`.
 */
export function useNounsDaoSetPendingVetoer<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          '_setPendingVetoer'
        >['abi'],
        '_setPendingVetoer'
      > & { functionName?: '_setPendingVetoer' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, '_setPendingVetoer'> & {
        abi?: never
        functionName?: '_setPendingVetoer'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_setPendingVetoer'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setPendingVetoer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setProposalThresholdBPS"`.
 */
export function useNounsDaoSetProposalThresholdBps<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          '_setProposalThresholdBPS'
        >['abi'],
        '_setProposalThresholdBPS'
      > & { functionName?: '_setProposalThresholdBPS' }
    : UseContractWriteConfig<
        TMode,
        typeof nounsDaoABI,
        '_setProposalThresholdBPS'
      > & {
        abi?: never
        functionName?: '_setProposalThresholdBPS'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof nounsDaoABI,
    '_setProposalThresholdBPS'
  >({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setProposalThresholdBPS',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setQuorumCoefficient"`.
 */
export function useNounsDaoSetQuorumCoefficient<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          '_setQuorumCoefficient'
        >['abi'],
        '_setQuorumCoefficient'
      > & { functionName?: '_setQuorumCoefficient' }
    : UseContractWriteConfig<
        TMode,
        typeof nounsDaoABI,
        '_setQuorumCoefficient'
      > & {
        abi?: never
        functionName?: '_setQuorumCoefficient'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_setQuorumCoefficient'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setQuorumCoefficient',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setVotingDelay"`.
 */
export function useNounsDaoSetVotingDelay<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          '_setVotingDelay'
        >['abi'],
        '_setVotingDelay'
      > & { functionName?: '_setVotingDelay' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, '_setVotingDelay'> & {
        abi?: never
        functionName?: '_setVotingDelay'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_setVotingDelay'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setVotingDelay',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setVotingPeriod"`.
 */
export function useNounsDaoSetVotingPeriod<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          '_setVotingPeriod'
        >['abi'],
        '_setVotingPeriod'
      > & { functionName?: '_setVotingPeriod' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, '_setVotingPeriod'> & {
        abi?: never
        functionName?: '_setVotingPeriod'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_setVotingPeriod'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setVotingPeriod',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_withdraw"`.
 */
export function useNounsDaoWithdraw<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, '_withdraw'>['abi'],
        '_withdraw'
      > & { functionName?: '_withdraw' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, '_withdraw'> & {
        abi?: never
        functionName?: '_withdraw'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, '_withdraw'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"cancel"`.
 */
export function useNounsDaoCancel<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, 'cancel'>['abi'],
        'cancel'
      > & { functionName?: 'cancel' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, 'cancel'> & {
        abi?: never
        functionName?: 'cancel'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, 'cancel'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'cancel',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"castRefundableVote"`.
 */
export function useNounsDaoCastRefundableVote<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          'castRefundableVote'
        >['abi'],
        'castRefundableVote'
      > & { functionName?: 'castRefundableVote' }
    : UseContractWriteConfig<
        TMode,
        typeof nounsDaoABI,
        'castRefundableVote'
      > & {
        abi?: never
        functionName?: 'castRefundableVote'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, 'castRefundableVote'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'castRefundableVote',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"castRefundableVoteWithReason"`.
 */
export function useNounsDaoCastRefundableVoteWithReason<
  TMode extends WriteContractMode,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          'castRefundableVoteWithReason'
        >['abi'],
        'castRefundableVoteWithReason'
      > & { functionName?: 'castRefundableVoteWithReason' }
    : UseContractWriteConfig<
        TMode,
        typeof nounsDaoABI,
        'castRefundableVoteWithReason'
      > & {
        abi?: never
        functionName?: 'castRefundableVoteWithReason'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof nounsDaoABI,
    'castRefundableVoteWithReason'
  >({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'castRefundableVoteWithReason',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"castVote"`.
 */
export function useNounsDaoCastVote<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, 'castVote'>['abi'],
        'castVote'
      > & { functionName?: 'castVote' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, 'castVote'> & {
        abi?: never
        functionName?: 'castVote'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, 'castVote'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'castVote',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"castVoteBySig"`.
 */
export function useNounsDaoCastVoteBySig<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, 'castVoteBySig'>['abi'],
        'castVoteBySig'
      > & { functionName?: 'castVoteBySig' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, 'castVoteBySig'> & {
        abi?: never
        functionName?: 'castVoteBySig'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, 'castVoteBySig'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'castVoteBySig',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"castVoteWithReason"`.
 */
export function useNounsDaoCastVoteWithReason<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof nounsDaoABI,
          'castVoteWithReason'
        >['abi'],
        'castVoteWithReason'
      > & { functionName?: 'castVoteWithReason' }
    : UseContractWriteConfig<
        TMode,
        typeof nounsDaoABI,
        'castVoteWithReason'
      > & {
        abi?: never
        functionName?: 'castVoteWithReason'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, 'castVoteWithReason'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'castVoteWithReason',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"execute"`.
 */
export function useNounsDaoExecute<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, 'execute'>['abi'],
        'execute'
      > & { functionName?: 'execute' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, 'execute'> & {
        abi?: never
        functionName?: 'execute'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, 'execute'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'execute',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"initialize"`.
 */
export function useNounsDaoInitialize<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, 'initialize'>['abi'],
        'initialize'
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, 'initialize'> & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, 'initialize'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"propose"`.
 */
export function useNounsDaoPropose<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, 'propose'>['abi'],
        'propose'
      > & { functionName?: 'propose' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, 'propose'> & {
        abi?: never
        functionName?: 'propose'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, 'propose'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'propose',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"queue"`.
 */
export function useNounsDaoQueue<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, 'queue'>['abi'],
        'queue'
      > & { functionName?: 'queue' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, 'queue'> & {
        abi?: never
        functionName?: 'queue'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, 'queue'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'queue',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"veto"`.
 */
export function useNounsDaoVeto<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof nounsDaoABI, 'veto'>['abi'],
        'veto'
      > & { functionName?: 'veto' }
    : UseContractWriteConfig<TMode, typeof nounsDaoABI, 'veto'> & {
        abi?: never
        functionName?: 'veto'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof nounsDaoABI, 'veto'>({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'veto',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__.
 */
export function usePrepareNounsDaoWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, TFunctionName>,
    'abi' | 'address'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_acceptAdmin"`.
 */
export function usePrepareNounsDaoAcceptAdmin(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_acceptAdmin'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_acceptAdmin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, '_acceptAdmin'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_acceptVetoer"`.
 */
export function usePrepareNounsDaoAcceptVetoer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_acceptVetoer'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_acceptVetoer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, '_acceptVetoer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_burnVetoPower"`.
 */
export function usePrepareNounsDaoBurnVetoPower(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_burnVetoPower'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_burnVetoPower',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, '_burnVetoPower'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setDynamicQuorumParams"`.
 */
export function usePrepareNounsDaoSetDynamicQuorumParams(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoABI,
      '_setDynamicQuorumParams'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setDynamicQuorumParams',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nounsDaoABI,
    '_setDynamicQuorumParams'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setMaxQuorumVotesBPS"`.
 */
export function usePrepareNounsDaoSetMaxQuorumVotesBps(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setMaxQuorumVotesBPS'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setMaxQuorumVotesBPS',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nounsDaoABI,
    '_setMaxQuorumVotesBPS'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setMinQuorumVotesBPS"`.
 */
export function usePrepareNounsDaoSetMinQuorumVotesBps(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setMinQuorumVotesBPS'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setMinQuorumVotesBPS',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nounsDaoABI,
    '_setMinQuorumVotesBPS'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setPendingAdmin"`.
 */
export function usePrepareNounsDaoSetPendingAdmin(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setPendingAdmin'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setPendingAdmin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setPendingAdmin'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setPendingVetoer"`.
 */
export function usePrepareNounsDaoSetPendingVetoer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setPendingVetoer'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setPendingVetoer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setPendingVetoer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setProposalThresholdBPS"`.
 */
export function usePrepareNounsDaoSetProposalThresholdBps(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoABI,
      '_setProposalThresholdBPS'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setProposalThresholdBPS',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nounsDaoABI,
    '_setProposalThresholdBPS'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setQuorumCoefficient"`.
 */
export function usePrepareNounsDaoSetQuorumCoefficient(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setQuorumCoefficient'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setQuorumCoefficient',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nounsDaoABI,
    '_setQuorumCoefficient'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setVotingDelay"`.
 */
export function usePrepareNounsDaoSetVotingDelay(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setVotingDelay'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setVotingDelay',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setVotingDelay'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_setVotingPeriod"`.
 */
export function usePrepareNounsDaoSetVotingPeriod(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setVotingPeriod'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_setVotingPeriod',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, '_setVotingPeriod'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"_withdraw"`.
 */
export function usePrepareNounsDaoWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, '_withdraw'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: '_withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, '_withdraw'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"cancel"`.
 */
export function usePrepareNounsDaoCancel(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, 'cancel'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'cancel',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, 'cancel'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"castRefundableVote"`.
 */
export function usePrepareNounsDaoCastRefundableVote(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, 'castRefundableVote'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'castRefundableVote',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, 'castRefundableVote'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"castRefundableVoteWithReason"`.
 */
export function usePrepareNounsDaoCastRefundableVoteWithReason(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoABI,
      'castRefundableVoteWithReason'
    >,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'castRefundableVoteWithReason',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nounsDaoABI,
    'castRefundableVoteWithReason'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"castVote"`.
 */
export function usePrepareNounsDaoCastVote(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, 'castVote'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'castVote',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, 'castVote'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"castVoteBySig"`.
 */
export function usePrepareNounsDaoCastVoteBySig(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, 'castVoteBySig'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'castVoteBySig',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, 'castVoteBySig'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"castVoteWithReason"`.
 */
export function usePrepareNounsDaoCastVoteWithReason(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, 'castVoteWithReason'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'castVoteWithReason',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, 'castVoteWithReason'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"execute"`.
 */
export function usePrepareNounsDaoExecute(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, 'execute'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'execute',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, 'execute'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareNounsDaoInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, 'initialize'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, 'initialize'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"propose"`.
 */
export function usePrepareNounsDaoPropose(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, 'propose'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'propose',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, 'propose'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"queue"`.
 */
export function usePrepareNounsDaoQueue(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, 'queue'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'queue',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, 'queue'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoABI}__ and `functionName` set to `"veto"`.
 */
export function usePrepareNounsDaoVeto(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoABI, 'veto'>,
    'abi' | 'address' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    functionName: 'veto',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoABI, 'veto'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__.
 */
export function useNounsDaoEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, TEventName>,
    'abi' | 'address'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"MaxQuorumVotesBPSSet"`.
 */
export function useNounsDaoMaxQuorumVotesBpsSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'MaxQuorumVotesBPSSet'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'MaxQuorumVotesBPSSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'MaxQuorumVotesBPSSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"MinQuorumVotesBPSSet"`.
 */
export function useNounsDaoMinQuorumVotesBpsSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'MinQuorumVotesBPSSet'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'MinQuorumVotesBPSSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'MinQuorumVotesBPSSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"NewAdmin"`.
 */
export function useNounsDaoNewAdminEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'NewAdmin'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'NewAdmin',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'NewAdmin'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"NewImplementation"`.
 */
export function useNounsDaoNewImplementationEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'NewImplementation'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'NewImplementation',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'NewImplementation'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"NewPendingAdmin"`.
 */
export function useNounsDaoNewPendingAdminEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'NewPendingAdmin'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'NewPendingAdmin',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'NewPendingAdmin'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"NewPendingVetoer"`.
 */
export function useNounsDaoNewPendingVetoerEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'NewPendingVetoer'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'NewPendingVetoer',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'NewPendingVetoer'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"NewVetoer"`.
 */
export function useNounsDaoNewVetoerEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'NewVetoer'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'NewVetoer',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'NewVetoer'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"ProposalCanceled"`.
 */
export function useNounsDaoProposalCanceledEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'ProposalCanceled'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'ProposalCanceled',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'ProposalCanceled'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"ProposalCreated"`.
 */
export function useNounsDaoProposalCreatedEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'ProposalCreated'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'ProposalCreated',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'ProposalCreated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"ProposalCreatedWithRequirements"`.
 */
export function useNounsDaoProposalCreatedWithRequirementsEvent(
  config: Omit<
    UseContractEventConfig<
      typeof nounsDaoABI,
      'ProposalCreatedWithRequirements'
    >,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'ProposalCreatedWithRequirements',
    ...config,
  } as UseContractEventConfig<
    typeof nounsDaoABI,
    'ProposalCreatedWithRequirements'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"ProposalExecuted"`.
 */
export function useNounsDaoProposalExecutedEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'ProposalExecuted'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'ProposalExecuted',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'ProposalExecuted'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"ProposalQueued"`.
 */
export function useNounsDaoProposalQueuedEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'ProposalQueued'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'ProposalQueued',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'ProposalQueued'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"ProposalThresholdBPSSet"`.
 */
export function useNounsDaoProposalThresholdBpsSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'ProposalThresholdBPSSet'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'ProposalThresholdBPSSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'ProposalThresholdBPSSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"ProposalVetoed"`.
 */
export function useNounsDaoProposalVetoedEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'ProposalVetoed'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'ProposalVetoed',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'ProposalVetoed'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"QuorumCoefficientSet"`.
 */
export function useNounsDaoQuorumCoefficientSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'QuorumCoefficientSet'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'QuorumCoefficientSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'QuorumCoefficientSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"QuorumVotesBPSSet"`.
 */
export function useNounsDaoQuorumVotesBpsSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'QuorumVotesBPSSet'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'QuorumVotesBPSSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'QuorumVotesBPSSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"RefundableVote"`.
 */
export function useNounsDaoRefundableVoteEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'RefundableVote'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'RefundableVote',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'RefundableVote'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"VoteCast"`.
 */
export function useNounsDaoVoteCastEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'VoteCast'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'VoteCast',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'VoteCast'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"VotingDelaySet"`.
 */
export function useNounsDaoVotingDelaySetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'VotingDelaySet'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'VotingDelaySet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'VotingDelaySet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"VotingPeriodSet"`.
 */
export function useNounsDaoVotingPeriodSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'VotingPeriodSet'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'VotingPeriodSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'VotingPeriodSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoABI}__ and `eventName` set to `"Withdraw"`.
 */
export function useNounsDaoWithdrawEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoABI, 'Withdraw'>,
    'abi' | 'address' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: nounsDaoABI,
    address: nounsDaoAddress,
    eventName: 'Withdraw',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoABI, 'Withdraw'>)
}
